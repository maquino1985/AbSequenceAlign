services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: ./app/backend/Dockerfile
    container_name: absequencealign-backend
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    volumes:
      - ./app/backend:/app:ro
    expose:
      - "8000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "conda", "run", "-n", "AbSequenceAlign", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    container_name: absequencealign-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

networks:
  app-network:
    driver: bridge

# Optional: Add volumes for persistent data if needed
# volumes:
#   app-data:
