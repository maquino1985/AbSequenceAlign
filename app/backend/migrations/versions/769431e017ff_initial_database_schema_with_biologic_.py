"""Initial database schema with biologic models

Revision ID: 769431e017ff
Revises:
Create Date: 2025-08-11 10:48:19.103056

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "769431e017ff"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "biologics",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("organism", sa.String(length=100), nullable=True),
        sa.Column("biologic_type", sa.String(length=50), nullable=False),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_biologics_name"), "biologics", ["name"], unique=False
    )
    op.create_index(
        op.f("ix_biologics_organism"), "biologics", ["organism"], unique=False
    )
    op.create_table(
        "sequences",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("sequence_type", sa.String(length=20), nullable=False),
        sa.Column("sequence_data", sa.Text(), nullable=False),
        sa.Column("length", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "biologic_aliases",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("biologic_id", sa.UUID(), nullable=False),
        sa.Column("alias", sa.String(length=255), nullable=False),
        sa.Column("alias_type", sa.String(length=50), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=True),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["biologic_id"], ["biologics.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_biologic_aliases_alias"),
        "biologic_aliases",
        ["alias"],
        unique=False,
    )
    op.create_index(
        op.f("ix_biologic_aliases_biologic_id"),
        "biologic_aliases",
        ["biologic_id"],
        unique=False,
    )
    op.create_table(
        "chains",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("biologic_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("chain_type", sa.String(length=50), nullable=False),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["biologic_id"], ["biologics.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_chains_biologic_id"), "chains", ["biologic_id"], unique=False
    )
    op.create_table(
        "chain_sequences",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("chain_id", sa.UUID(), nullable=False),
        sa.Column("sequence_id", sa.UUID(), nullable=False),
        sa.Column("start_position", sa.Integer(), nullable=True),
        sa.Column("end_position", sa.Integer(), nullable=True),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["chain_id"], ["chains.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["sequence_id"], ["sequences.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_chain_sequences_chain_id"),
        "chain_sequences",
        ["chain_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_chain_sequences_sequence_id"),
        "chain_sequences",
        ["sequence_id"],
        unique=False,
    )
    op.create_table(
        "sequence_domains",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("chain_sequence_id", sa.UUID(), nullable=False),
        sa.Column("domain_type", sa.String(length=50), nullable=False),
        sa.Column("start_position", sa.Integer(), nullable=False),
        sa.Column("end_position", sa.Integer(), nullable=False),
        sa.Column("confidence_score", sa.Integer(), nullable=True),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["chain_sequence_id"], ["chain_sequences.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_sequence_domains_chain_sequence_id"),
        "sequence_domains",
        ["chain_sequence_id"],
        unique=False,
    )
    op.create_table(
        "domain_features",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("sequence_domain_id", sa.UUID(), nullable=False),
        sa.Column("feature_type", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("value", sa.Text(), nullable=False),
        sa.Column("start_position", sa.Integer(), nullable=True),
        sa.Column("end_position", sa.Integer(), nullable=True),
        sa.Column("confidence_score", sa.Integer(), nullable=True),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["sequence_domain_id"], ["sequence_domains.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_domain_features_sequence_domain_id"),
        "domain_features",
        ["sequence_domain_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_domain_features_sequence_domain_id"),
        table_name="domain_features",
    )
    op.drop_table("domain_features")
    op.drop_index(
        op.f("ix_sequence_domains_chain_sequence_id"),
        table_name="sequence_domains",
    )
    op.drop_table("sequence_domains")
    op.drop_index(
        op.f("ix_chain_sequences_sequence_id"), table_name="chain_sequences"
    )
    op.drop_index(
        op.f("ix_chain_sequences_chain_id"), table_name="chain_sequences"
    )
    op.drop_table("chain_sequences")
    op.drop_index(op.f("ix_chains_biologic_id"), table_name="chains")
    op.drop_table("chains")
    op.drop_index(
        op.f("ix_biologic_aliases_biologic_id"), table_name="biologic_aliases"
    )
    op.drop_index(
        op.f("ix_biologic_aliases_alias"), table_name="biologic_aliases"
    )
    op.drop_table("biologic_aliases")
    op.drop_table("sequences")
    op.drop_index(op.f("ix_biologics_organism"), table_name="biologics")
    op.drop_index(op.f("ix_biologics_name"), table_name="biologics")
    op.drop_table("biologics")
    # ### end Alembic commands ###
